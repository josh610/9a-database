type Ascent {
  _id: ID!
  climber: Climber!
  climb: Climb!
  gradeProposal: String
  fa: Boolean
  flash: Boolean
  onsight: Boolean
  date: Date
  links: [String]
  description: String
  addedAt: Date!
  updatedAt: Date!
}

input AscentsFilter {
  climber: String
  climb: String
}

input CreateAscentInput {
  climber: ID!
  climb: ID!
  gradeProposal: String
  fa: Boolean
  flash: Boolean
  onsight: Boolean
  date: String
  links: [String]
  description: String
}

type Query {
  ascentByID(ID: ID!): Ascent
  ascents(filter: AscentsFilter): [Ascent!]
}

type Mutation {
  createAscent(input: CreateAscentInput!): Ascent!
  updateAscent(ID: ID!, input: CreateAscentInput): Boolean!
  deleteAscent(ID: ID!): Boolean!
}
